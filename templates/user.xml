<templateSet group="user">
  <template name="sv" value="${styleVariables.$END$}" description="styleVariables" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="scp" value="${props =&gt; props.$END$ &amp;&amp; css`&#10;  &#10;`};" description="styled components props" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="trans" value="transition: all .2s ease;$END$" description="transition" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="newfc" value="import React from 'react'&#10;import styled from 'styled-components'&#10;import styleVariables from ''&#10;&#10;&#10;const Wrapper = styled.div`&#10;&#10;`&#10;&#10;const FunctionalComponent = () =&gt; (&#10;  &lt;Wrapper&gt;&#10;&#10;  &lt;/Wrapper&gt;&#10;)&#10;&#10;export default FunctionalComponent" description="template for functional component" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="iust" value="import { useTranslation } from 'react-i18next'" description="import useTranslation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="t" value="{t`$END$`}" description="Translate method" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="ust" value="const { t } = useTranslation('$EXPR$', { useSuspense: false })" description="useTranslation" toReformat="false" toShortenFQNames="true">
    <variable name="EXPR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
</templateSet>